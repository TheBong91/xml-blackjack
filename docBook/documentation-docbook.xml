<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE book PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
                      "http://docbook.org/xml/4.5/docbookx.dtd">
<book>
    <bookinfo>
        <title>XML Praktikum SS17 - Blackjack Projekt</title>
    </bookinfo>
    <article>
        <title>Einleitung</title>
        <para>Das hier implementierte Blackjack Spiel wurde im SS 2017 im Rahmen des Praktikums
            "XML Technologies" bei Frau Prof. Brüggemann-Klein entwickelt und ist ausschließlich in XML
            und dessen unterstützenden Technologien programmiert.</para>
        <para>Hierbei wurden Scalable Vector Graphics (SVG) zur visuellen Repräsentation verwendet.
            Die Transformationssprachen von XML - XSLT und XQuery - bilden die Verbindung von
            den einfachen XML Files in der integrierten Datenbank zur Grafik. Die Verwendung von
            XHtml mit XForms ermöglicht dem User u.a. seinen Namen und das gewünschte
            Guthaben einzutragen. </para>
    </article>
    <article>
        <title>Verwendete Technologien</title>
        <variablelist>
            <varlistentry>
                <term>Docbook</term>
                <listitem>
                    <para>Das Projekt wurde mithilfe von DocBook dokumentiert. Beschrieben werden
                        die verschiedenen Entwicklungsphasen und Funktionen der hier vorgestellten
                        Spielfassung von "Blackjack". DocBook eignet sich bestens für die
                        Dokumentation im technischen Umfeld und ermöglicht u.a. eine Transformation
                        ins PDF Format. </para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>HTML</term>
                <listitem>
                    <para/>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>XQuery</term>
                <listitem>
                    <para>XQuery bezeichnet eine vom W3C spezifizierte Abfragesprache für XML
                        Datenbanken. Sie dient dazu aus großen XML-Datensätzen einzelne spezifische
                        Informationen herauszufiltern. </para>
                    <para>Die XQuery Funktionen wurden entsprechend des entworfenem
                        Klassendiagrammes und ihrer Sinnhaftigkeit auf die Dateien controller.xqm,
                        card.xqm, game.xqm, dealer.xqm, tools.xqm und player.xqm aufgeschlüsselt. Im
                        Folgenden soll auf die einzelnen Funktionen eingegangen werden:</para>
                    <para>
                        <variablelist>
                            <varlistentry>
                                <term>tools.xqm</term>
                                <listitem>
                                    <para>In dieser Datei sind die Funktionen zur Generierung eines
                                        Zeitstempels und einer ID implementiert.</para>
                                    <para>
                                        <itemizedlist>
                                            <listitem>
                                                <para>generateId() gibt mit Hilfe von Java UUID
                                                  Generator eine einzigartige ID zurück. Die
                                                  Funktion wird für die spätere Generierung der game
                                                  und player ID benötigt.</para>
                                            </listitem>
                                            <listitem>
                                                <para>random() gibt eine Zufallszahl im Bereich[1,
                                                  $range] wieder. Sie benutzt eine Java Funktion,
                                                  bis generate-random-number allgemein verfügbar
                                                  ist.</para>
                                            </listitem>
                                            <listitem>
                                                <para>timestamp() gibt einen Zeitstempel im Format
                                                  hhmmssmmmxxxx (Stunden, Minuten, Sekunden,
                                                  Millisekunden, Zufallszahl) zurück. Hierbei werden
                                                  durch replace sowohl die Separatoren "." und ":",
                                                  als auch die Zeitzoneninfo von current-time(),
                                                  entfernt. Anschließend wird eine Zufallszahl, die
                                                  mit Hilfe von random() erstellt wurde,
                                                  konkateniert.</para>
                                            </listitem>
                                        </itemizedlist>
                                    </para>
                                </listitem>
                            </varlistentry>
                        </variablelist>
                        <variablelist>
                            <varlistentry>
                                <term>game.xqm</term>
                                <listitem>
                                    <para>In dieser Datei ist der Spielablauf implementiert. </para>
                                    <para>Zuerst wurde der Namespace g definiert, der auf die Datei
                                        "blackjack/game" zugreift. Außerdem werden tools (t), player
                                        (p), dealer (d) und card (c)importiert. Die Varibale
                                        $g:casino öffnet die Datenbank "blackjack", lokalisiert
                                        "casino" in der Datenbank und navigiert zu dessen erstem
                                        Element. </para>
                                    <para>
                                        <itemizedlist>
                                            <listitem>
                                                <para>shuffleCard</para>
                                            </listitem>
                                            <listitem>
                                                <para>createNewGame() erstellt eine neue
                                                  Spielinstanz mit den eingegebenen Spielernamen,
                                                  Maximal- und Minimaleinsatz und der Balance. Es
                                                  wird, durch die in tools definierte Funktion
                                                  generateId(), eine neue Game Id kreiert. Mit der
                                                  eingegebenen Balance und dem Spielernamen wird auf
                                                  die in player definierte Funktion
                                                  "createNewPlayer" aufgerufen, in der die Spieler
                                                  kreiert werden. ActivePlayer ist der Player, der
                                                  den Index[1] besitzt. Durch shuffleCards() werden
                                                  die Karten gemischt und allesamt wird in game
                                                  zurückgegeben.</para>
                                            </listitem>
                                            <listitem>
                                                <para>insertGame() ist eine updating Funktion und
                                                  fügt eine neue Game Instanz in den Casino Sever
                                                  ein.</para>
                                            </listitem>
                                            <listitem>
                                                <para>deleteGame() ist eine updating Funktion und
                                                  löscht eine Game Instanz aus dem Casino Server.
                                                  Die zu löschende Instanz wird durch die game Id
                                                  referenziert.</para>
                                            </listitem>
                                            <listitem>
                                                <para>setActivePlayer() ist eine updating Funktion
                                                  und legt den Player fest, der an der Reihe ist zu
                                                  agieren. Dabei wird der Knotenpunkt bzw die "Node"
                                                  von a</para>
                                            </listitem>
                                        </itemizedlist>
                                    </para>
                                </listitem>
                            </varlistentry>
                        </variablelist>
                        <variablelist>
                            <varlistentry>
                                <term>player.xqm</term>
                                <listitem>
                                    <para></para>
                                </listitem>
                            </varlistentry>
                        </variablelist>
                        <variablelist>
                            <varlistentry>
                                <term>dealer.xqm</term>
                                <listitem>
                                    <para></para>
                                </listitem>
                            </varlistentry>
                        </variablelist>
                        <variablelist>
                            <varlistentry>
                                <term>card.xqm </term>
                                <listitem>
                                    <para>Hier werden durch verschiedene Konstruktoren das Objekt
                                        "Karte" erzeugt.</para>
                                </listitem>
                            </varlistentry>
                        </variablelist>
                    </para>
                </listitem>
            </varlistentry>
        </variablelist>
        <variablelist>
            <varlistentry>
                <term>SVG</term>
                <listitem>
                    <para>SVG steht für Scalable Vector Graphics und ermöglicht vektorbasierte
                        Grafiken in XML. SVG ist eine W3C Empfehlung und wurde deswegen für die
                        visuelle Repräsentation von Blackjack verwendet.</para>
                    <para>Allgemein wurde darauf geachtet, möglichst viele SVG Patterns zu
                        bestimmen, die innerhalb eines &lt;defs> Element definiert und durch eine ID
                        referenziert werden können. Die Svg Patterns definieren dabei eine Figur
                        oder Form, die wiederum aus verschiedenen SVG Objekten oder Bildern bestehen
                        und sogar in anderen Objekten wiederverwendet werden können. Mit &lt;use>
                        und dem Referenzlink kann man die Patterns einfach anwenden. Somit wurden
                        beispielsweise die Spielfiguren, bestehend aus einem Kreis und einem Pfad,
                        oder die Kartenplätze, bestehend aus einem abgerundetem Rechteck, 5 Mal
                        rotierend in die Graphik projeziert.</para>
                    <para>Die Form des Blackjack Tischs wurde durch ein abgerundetes Rechteck und
                        einen abgeschnittenen Kreis konstruiert. Dabei wurde die größere Ausführung
                        in schwarz und die kleinere Ausführung in dunkelgrün mit weißem Rand
                        gestaltet. Das Logo von dem Blackjack Tisch ist ein Bild aus dem Internet.
                        Die geschwungene Form des Insurance Textes und dessen Umrandung wurde anhand
                        eines selbst definierten Pfades konstruiert.</para>
                    <para>Die Buttons können verschiedene Modi einnehmen. Mit Hilfe von &lt;style>
                        werden die verschiedenen graphischen Ausführungen eines Objektes realisiert.
                        Wenn der Button aktiv ist und jeder Zeit auf ihn gedrückt werden kann, so
                        ist er grau. Fährt man die Maus über einen aktiven Button, so verringert
                        sich die Opazität. Ein inaktiver Button, also ein Button den man aufgrund
                        des Spielverlaufs momentan nicht anklicken kann, ist dunkelgrau.</para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>XSLT</term>
                <listitem>
                    <para/>
                </listitem>
            </varlistentry>
        </variablelist>
    </article>   
    <article>
        <title>Blackjack Regeln</title>
        <variablelist>
            <varlistentry>
                <term>Anzahl Spieler</term>
                <listitem>
                    <para>Max. 5 Spieler</para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>Kartendeck</term>
                <listitem>
                    <para>Sechs Paketen französischer Spielkarten zu 52 Blatt, also 312 Karten
                        gespielt </para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>Der BlackJack Tisch</term>
                <listitem>
                    <para>Black Jack wird an einem halbkreisförmigen Tisch gespielt. An der geraden
                        Seite spielt der Dealer. An der runden Seite befinden sich bis zu 7 Spieler.
                        Bei unserer Variante können maximal 5 Spieler teilnehmen, da wir darin eine
                        bessere graphische Übersichtlichkeit identifizieren. Auf dem Tisch befinden
                        sich Linien, welche die Positionen der Karten der Spieler einschränken und
                        das Fach für das Zieh- und Ablagedeck andeuten. </para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>Der Dealer </term>
                <listitem>
                    <para>Jeder Spieler spielt einzeln gegen den Dealer. Der Dealer fungiert im
                        übertragenem Sinne als Bank. </para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>Ziel des Spiels </term>
                <listitem>
                    <para> Ziel des Spiels ist es mit zwei oder mehereren Karten näher an Kartenwert
                        21 heranzukommen als der Dealer. Sobald man die 21 überschritten hat, hat
                        man verloren. </para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>"Blackjack" </term>
                <listitem>
                    <para>Ein Spieler oder der Dealer erzielt einen sogenannten "Blackjack", wenn er
                        mit seinen Karten genau den Kartenwert 21 erreichen.</para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term> Ablauf des Spiels </term>
                <listitem>
                    <para>Vor Beginn eines Spiels müssen die Spieler sich einen Namen aussuchen und
                        ihr Guthaben hochladen. Ausgehend von diesem Guthaben, können die Spieler
                        anschließend einen gewünschten Einsatz setzen, der niedriger als ihr
                        Guthaben ist. Sobald alle Spieler ihre Einsätze gemacht haben, beginnt das
                        Blackjack-Spiel mit dem Austeilen der Karten. Dabei bekommen die Spieler
                        zwei Karten ausgeteilt, die leicht versetzt übereinander gelegt werden,
                        damit man den Wert jeder Karte noch gut erkennen kann. Dem Dealer werden
                        ebenfalls zwei Karten ausgeteilt, jedoch liegt eine Karte offen, die Andere
                        verdeckt vor ihm. </para>
                    <para>Nun wird jeder Spieler der Reihe nach gefragt, wie er vorgehen will.
                        Abhängig von den Karten, die er bereits gezogen hat, muss sich der Spieler
                        entscheiden, ob er eine weitere Karte ziehen soll (hit) oder bei dem
                        aktuellen Kartenwert bleiben will (stand). Die Spieler können so oft Karten
                        fordern, wie sie wollen, sobald sie jedoch den Wert 21 überschreiten, haben
                        sie die Runde verloren und ihr Einsatz wird von dem Dealer eingesammelt.
                        Sobald sich der Spieler für "stand" entscheidet, ist der nächste Spieler an
                        der Reihe.</para>
                    <para>Nachdem alle Spieler ihre Aktionen ausgeführt haben, deckt der Dealer
                        seine verdeckte Karte auf. </para>
                    <para>Hat der Dealer einen Wert unter 17, ist er gezwungen noch eine Karte zu
                        ziehen, bis er die 17 oder einen Wert darüber erreicht und keine weitere
                        Karte mehr ziehen darf. </para>
                    <para><emphasis>Versicherung: </emphasis>Ist die offene Karte des Dealers ein
                        Ass, haben die Mitspieler die Möglichkeit geboten, eine Versicherung für 50%
                        ihres Einsatzes abzuschließen. Somit sichern sie sich gegen den Fall ab,
                        dass der Dealer einen Blackjack erhält. Hat der Dealer nämlich tatsächlich
                        einen Blackjack, so erhalten die Spieler zumindest 50% ihres Einsatzes
                        zurück. Die Spieler, die keine Versicherung abgeschlossen haben, verlieren
                        ihren gesamten Einsatz, insofern sie nicht auch einen Blackjack erreicht
                        haben. Sollte ein Spieler ebenfalls einen Blackjack haben, so nennt man dies
                        "Push" und der Spieler erhält seinen Einsatz zurück.</para>
                </listitem>
            </varlistentry>
        </variablelist>
    </article>
</book>
